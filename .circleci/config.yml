version: 2.1
# executors:
#   core-executor:
#     docker:
#       - image: 'cimg/node:17.9.1'
commands:
  save-npm-cache:
    description: "save folder node modules"
    steps:
      - save_cache:
          key: -v2-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  restore-npm-cache:
    description: "restore folder node modules"
    steps:
      - restore_cache:
          keys:
            - -v2-{{ checksum "package-lock.json" }}
            - -v2-
  save-build-cache:
    description: "save folder build"
    steps:
      - save_cache:
          key: -v1-build{{ checksum "package-lock.json" }}
          paths:
            - build
  restore-build-cache:
    description: "restore folder build"
    steps:
      - restore_cache:
          keys:
            - -v1-build{{ checksum "package-lock.json" }}
            - -v1-build
jobs:
  # install task
  install:
    docker:
      - image: cimg/node:17.9.1
    steps:
      - checkout
      - restore-npm-cache
      - run: npm install
      - save-npm-cache
    

  # check code formating
  eslint:
    docker:
      - image: cimg/node:17.9.1
    # executors: core-executor
    steps:
      - checkout
      - restore-npm-cache
      - run: npm run eslint
      # - run: npm run eslint -- --fix


  # testing task
  unit-test:
    docker:
      - image: 'cimg/node:17.9.1'
    # executors: core-executor
    steps:
      - checkout 
      - restore-npm-cache
      - run: npm run test

  # build task
  build:
    docker:
      - image: 'cimg/node:17.9.1'
    steps:
      - checkout 
      - restore-npm-cache
      - run: npm run build
      - save-build-cache


  # Deploy with Surge task
  deploy:
    docker:
      - image: cimg/node:17.9.1
    # executors: core-executor
    steps:
      - checkout
      - restore-npm-cache
      - restore-build-cache
      # - run: npm run build
      - run:
          name: deploy to surge
          commands: 
            ./node_modules/surge/lib/cli.js --project ./build --domain bozuman-usdtovnd.surge.sh



workflows:
  build-and-deploy:
    jobs:
      - install
      - eslint:
          requires:
            - install
      - unit-test:
          requires:
            - install
      - build:
          requires:
            - eslint
            - unit-test
      - deploy:
          requires:
            - build